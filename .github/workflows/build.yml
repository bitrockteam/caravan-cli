## This workflow is managed by meta-repo.
# Please do not edit from the cli repo.

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: Build and validation

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint files
    strategy:
      matrix:
        go-version: '1.16'
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          args: --verbose
          skip-go-installation: true
  test:
    name: Run tests
    runs-on: 'ubuntu-latest'
    needs: lint
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-linux/amd64-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-linux/amd64-
      - run: go test ./... -v -cover
  build:
    name: Build binary
    needs: test
    strategy:
      matrix:
        goosarch:
          - 'darwin/amd64'
          - 'linux/amd64'
        go-version: '1.16'
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.goosarch }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.goosarch }}
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v
